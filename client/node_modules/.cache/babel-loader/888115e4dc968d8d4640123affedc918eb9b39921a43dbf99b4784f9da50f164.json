{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACULTATE\\\\LICENTA\\\\client\\\\src\\\\pages\\\\AddProduct.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddProduct() {\n  _s();\n  const [listOfProducts, setListOfProducts] = useState([]);\n  const initialValues = {\n    name: \"\",\n    category: \"\",\n    totalCalories: \"\",\n    quantity: 0,\n    ingredients: []\n  };\n  const onSubmit = data => {\n    console.log(\"it worked1\");\n    axios.post(\"http://localhost:3001/products\", data).then(response => {\n      setListOfProducts(prevList => [...prevList, response.data]);\n      console.log(\"it worked2\");\n    });\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(),\n    category: Yup.string().required(),\n    quantity: Yup.number().required(),\n    totalCalories: Yup.number().required(),\n    ingredients: Yup.array().of(Yup.object().shape({\n      name: Yup.string().required(),\n      quantity: Yup.string().required()\n    }))\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addProductPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: _ref => {\n        let {\n          values\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            autoComplete: \"off\",\n            id: \"inputAddProduct\",\n            name: \"name\",\n            placeholder: \"Example: Coca Cola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"category\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            autoComplete: \"off\",\n            id: \"inputAddProduct\",\n            name: \"category\",\n            placeholder: \"Example: sugars \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"quantity\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            autoComplete: \"off\",\n            id: \"inputAddProduct\",\n            name: \"quantity\",\n            placeholder: \"Example: 2.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"ingredients\",\n            children: _ref2 => {\n              let {\n                push,\n                remove\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this), values.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `ingredients[${index}].name`,\n                    placeholder: \"Ingredient Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `ingredientsp${index}].name`,\n                    component: \"span\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: `ingredients[${index}].quantity`,\n                    placeholder: \"Ingredient Quantity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `ingredients[${index}].quantity`,\n                    component: \"span\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 29\n                  }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => remove(index),\n                    children: \"Remove Last Ingredient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 25\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => push({\n                    name: \"\",\n                    quantity: \"\"\n                  }),\n                  children: \"Add Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSubmit,\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AddProduct, \"CO54BgNS0sX2ODd5oYAtvBVGOsM=\");\n_c = AddProduct;\nexport default AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","FieldArray","FormikProps","Yup","axios","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddProduct","_s","listOfProducts","setListOfProducts","initialValues","name","category","totalCalories","quantity","ingredients","onSubmit","data","console","log","post","then","response","prevList","validationSchema","object","shape","string","required","number","array","of","className","children","_ref","values","fileName","_jsxFileName","lineNumber","columnNumber","component","autoComplete","id","placeholder","_ref2","push","remove","map","ingredient","index","type","onClick","_c","$RefreshReg$"],"sources":["D:/FACULTATE/LICENTA/client/src/pages/AddProduct.js"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage, FieldArray, FormikProps} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction AddProduct() {\r\n\r\n    const [listOfProducts, setListOfProducts] = useState([]);\r\n\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        category: \"\",\r\n        totalCalories: \"\",\r\n        quantity: 0,\r\n        ingredients: [],\r\n    };\r\n\r\n    \r\n    const onSubmit = (data) => {\r\n        console.log(\"it worked1\");\r\n\r\n        axios.post(\"http://localhost:3001/products\", data).then((response) => {\r\n            setListOfProducts(prevList => [...prevList, response.data]);\r\n            console.log(\"it worked2\");\r\n\r\n        });\r\n    };\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(),\r\n        category: Yup.string().required(),\r\n        quantity: Yup.number().required(),\r\n        totalCalories: Yup.number().required(),\r\n        ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n                name: Yup.string().required(),\r\n                quantity: Yup.string().required(),\r\n            })\r\n        ),\r\n    });\r\n\r\n\r\n  return ( \r\n    <div className=\"addProductPage\">\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        {({ values }) => (\r\n        <Form>\r\n            <label>Product Name: </label>\r\n            <ErrorMessage name=\"name\" component=\"span\"/>\r\n            <Field autoComplete=\"off\" id=\"inputAddProduct\" name=\"name\" placeholder=\"Example: Coca Cola\" />\r\n            <label>Category: </label>\r\n            <ErrorMessage name=\"category\" component=\"span\"/>\r\n            <Field autoComplete=\"off\" id=\"inputAddProduct\" name=\"category\" placeholder=\"Example: sugars \" />\r\n            <label>Quantity: </label>\r\n            <ErrorMessage name=\"quantity\" component=\"span\"/>\r\n            <Field autoComplete=\"off\" id=\"inputAddProduct\" name=\"quantity\" placeholder=\"Example: 2.5\" />\r\n\r\n            <FieldArray name=\"ingredients\">\r\n                {({ push, remove }) => (\r\n                  <>\r\n                    <label>Ingredients: </label>\r\n                    {values.ingredients.map((ingredient, index) => (\r\n                        <div key={index}>\r\n                            <Field name={`ingredients[${index}].name`} placeholder=\"Ingredient Name:\" />\r\n                            <ErrorMessage name={`ingredientsp${index}].name`} component = \"span\"/>\r\n                            <Field name={`ingredients[${index}].quantity`} placeholder=\"Ingredient Quantity:\" />\r\n                            <ErrorMessage name={`ingredients[${index}].quantity`} component = \"span\"/>\r\n                            {index > 0 && (\r\n                                <button type=\"button\" onClick={() => remove(index)}>\r\n                                    Remove Last Ingredient\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"button\" onClick={() => push({name: \"\", quantity: \"\"})}>\r\n                        Add Ingredient\r\n                    </button>\r\n                  </>\r\n                )}\r\n            </FieldArray>\r\n\r\n            \r\n\r\n            {/* <label>Calories no.: </label>\r\n            <ErrorMessage name=\"totalCalories\" component=\"span\"/>\r\n            <Field autoComplete=\"off\" id=\"inputAddProduct\" name=\"totalCalories\" placeholder=\"Example: 86\" /> */}\r\n            <button type=\"button\" onClick={onSubmit}>Add Product</button>\r\n        </Form>\r\n        )}\r\n       </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}