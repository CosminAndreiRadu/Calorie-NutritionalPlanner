{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACULTATE\\\\LICENTA\\\\client\\\\src\\\\pages\\\\GenerateMealPlan.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateMealPlan() {\n  _s();\n  const email = sessionStorage.getItem(\"email\");\n  const [listOfRecipes, setlistOfRecipes] = useState([]);\n  const [listOfConstraintedRecipes, setlistOfConstraintedRecipes] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/recipes\").then(response => {\n      setlistOfRecipes(response.data);\n    });\n  }, []);\n  const initialValues = {\n    name: \"\",\n    type: \"\"\n  };\n  const onSubmit = async data => {\n    let score;\n    let constraints;\n    let selectedRecipeIds = [];\n    var userId;\n    axios.get(`http://localhost:3001/authentication/${email}`).then(response => {\n      userId = response.data;\n      axios.get(`http://localhost:3001/profiles/${userId}`).then(response => {\n        score = response.data.score;\n        constraints = response.data.constraints;\n        //constraints = [\"peanuts-free\"];\n        console.log(score);\n        if (constraints) {\n          const constraintedRecipes = listOfRecipes.filter(recipe => constraints.includes(recipe.category));\n          setlistOfConstraintedRecipes(constraintedRecipes);\n        } else {\n          setlistOfConstraintedRecipes(listOfRecipes);\n        }\n        if (listOfConstraintedRecipes.length > 0) {\n          listOfConstraintedRecipes.forEach(recipe => {\n            axios.get(`http://localhost:3001/recipes/portion/${recipe.id}`).then(response => {\n              recipe.totalCalories = response.data.portion;\n              recipe.quantity = recipe.quantity / response.data.portions;\n            });\n          });\n        }\n        console.log(listOfConstraintedRecipes);\n        setTimeout(() => {\n          let leftScore = score;\n          while (selectedRecipeIds.length < 3) {\n            const randomArrayIndex = Math.floor(Math.random() * listOfConstraintedRecipes.length);\n            const randomRecipe = listOfConstraintedRecipes[randomArrayIndex];\n            if (randomRecipe.totalCalories <= leftScore) {\n              selectedRecipeIds.push(randomRecipe.id);\n              leftScore -= randomRecipe.totalCalories;\n              listOfConstraintedRecipes.splice(randomArrayIndex, 1);\n            } else {\n              listOfConstraintedRecipes.splice(randomArrayIndex, 1);\n            }\n          }\n        }, 3000);\n        setTimeout(() => {\n          console.log(selectedRecipeIds);\n          const temp = {\n            recipeIds: selectedRecipeIds,\n            name: data.name,\n            type: data.type,\n            userId: userId\n          };\n          axios.post(\"http://localhost:3001/mealplans/generate\", temp).then(response => {\n            //console.log(response.data);\n          });\n        }, 5000);\n      });\n    });\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(),\n    type: Yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createProfilePage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createProfilePageForm\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: validationSchema,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Meal Plan Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            autoComplete: \"off\",\n            id: \"inputGenerateMealPlan\",\n            name: \"name\",\n            placeholder: \"Example: 19 June Monday \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Goal : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"type\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"select\",\n            id: \"inputGenerateMealPlan\",\n            name: \"type\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cut\",\n              children: \"Loose Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mantain\",\n              children: \"Maintain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bulk\",\n              children: \"Gain Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Generate MealPlan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateMealPlan, \"B3nmryxLCbk08sseRGuQV11Or/c=\");\n_c = GenerateMealPlan;\nexport default GenerateMealPlan;\nvar _c;\n$RefreshReg$(_c, \"GenerateMealPlan\");","map":{"version":3,"names":["React","Link","Formik","Form","Field","ErrorMessage","useEffect","useState","useParams","axios","Yup","jsxDEV","_jsxDEV","GenerateMealPlan","_s","email","sessionStorage","getItem","listOfRecipes","setlistOfRecipes","listOfConstraintedRecipes","setlistOfConstraintedRecipes","get","then","response","data","initialValues","name","type","onSubmit","score","constraints","selectedRecipeIds","userId","console","log","constraintedRecipes","filter","recipe","includes","category","length","forEach","id","totalCalories","portion","quantity","portions","setTimeout","leftScore","randomArrayIndex","Math","floor","random","randomRecipe","push","splice","temp","recipeIds","post","validationSchema","object","shape","string","required","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","component","autoComplete","placeholder","as","value","_c","$RefreshReg$"],"sources":["D:/FACULTATE/LICENTA/client/src/pages/GenerateMealPlan.js"],"sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport * as Yup from 'yup';\r\n\r\n function GenerateMealPlan() {\r\n    const email = sessionStorage.getItem(\"email\");\r\n\r\n    const [listOfRecipes, setlistOfRecipes] = useState([]);\r\n    const [listOfConstraintedRecipes, setlistOfConstraintedRecipes] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:3001/recipes\").then((response) => {\r\n          setlistOfRecipes(response.data);\r\n        });\r\n      }, []);\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        type: \"\",\r\n    };\r\n\r\n\r\n\r\n    const  onSubmit = async (data) => {\r\n\r\n        let score;\r\n        let constraints;\r\n        let selectedRecipeIds = [];\r\n        var userId;\r\n\r\n        axios.get(`http://localhost:3001/authentication/${email}`).then((response) => {\r\n            userId = response.data;\r\n            axios.get(`http://localhost:3001/profiles/${userId}`).then((response) => {\r\n                 score = response.data.score;\r\n                 constraints = response.data.constraints;\r\n                 //constraints = [\"peanuts-free\"];\r\n                 console.log(score);\r\n                 if (constraints) {\r\n                    const constraintedRecipes =  listOfRecipes.filter((recipe) =>\r\n                      constraints.includes(recipe.category)\r\n                    );\r\n                    setlistOfConstraintedRecipes(constraintedRecipes);\r\n                  } else {\r\n                    setlistOfConstraintedRecipes(listOfRecipes);\r\n                  }\r\n                  if (listOfConstraintedRecipes.length > 0) {\r\n                \r\n                    listOfConstraintedRecipes.forEach((recipe) => {\r\n                       axios.get(`http://localhost:3001/recipes/portion/${recipe.id}`).then((response) => {\r\n                            recipe.totalCalories = response.data.portion;\r\n                            recipe.quantity = recipe.quantity / response.data.portions;\r\n                        });\r\n                    });\r\n\r\n                  }\r\n                  console.log(listOfConstraintedRecipes);\r\n\r\n                  setTimeout(() => {\r\n\r\n                    let leftScore = score;\r\n                    while (selectedRecipeIds.length < 3) {\r\n                      const randomArrayIndex = Math.floor(Math.random() * listOfConstraintedRecipes.length);\r\n                      const randomRecipe = listOfConstraintedRecipes[randomArrayIndex];\r\n                      \r\n                      if (randomRecipe.totalCalories <= leftScore ) {\r\n                        selectedRecipeIds.push(randomRecipe.id);\r\n                        leftScore -= randomRecipe.totalCalories;\r\n                        listOfConstraintedRecipes.splice(randomArrayIndex, 1);\r\n                      }\r\n                      else {\r\n                        listOfConstraintedRecipes.splice(randomArrayIndex, 1);\r\n                      }\r\n                    }\r\n                  },3000);\r\n\r\n                  setTimeout(() => {\r\n                    console.log(selectedRecipeIds);\r\n                    const temp = {\r\n                      recipeIds: selectedRecipeIds,\r\n                      name: data.name,\r\n                      type : data.type,\r\n                      userId: userId\r\n                    };\r\n                    axios.post(\"http://localhost:3001/mealplans/generate\", temp).then((response) => {\r\n                      //console.log(response.data);\r\n                    });\r\n                  },5000);\r\n\r\n \r\n              });\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(),\r\n        type: Yup.string().required(),\r\n\r\n    });\r\n\r\n\r\n  return (\r\n    <div className='createProfilePage'>\r\n        <Link to=\"/\">Back</Link>\r\n        <div className='createProfilePageForm'>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                <Form>\r\n                    <label>Meal Plan Name: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\"/>\r\n                    <Field autoComplete=\"off\" id=\"inputGenerateMealPlan\" name=\"name\" placeholder=\"Example: 19 June Monday \" />\r\n\r\n                    <label>Goal : </label>\r\n                    <ErrorMessage name=\"type\" component=\"span\"/>\r\n                    <Field as=\"select\" id=\"inputGenerateMealPlan\" name=\"type\">\r\n                        <option value=\"cut\">Loose Weight</option>\r\n                        <option value=\"mantain\">Maintain</option>\r\n                        <option value=\"bulk\">Gain Weight</option>\r\n                    </Field>\r\n                    \r\n\r\n                    <button type=\"submit\">Generate MealPlan</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateMealPlan\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}